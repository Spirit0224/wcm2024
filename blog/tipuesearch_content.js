var tipuesearch = {"pages":[{"title":"About","text":"CMSimfly 內容管理網誌 課程倉儲: https://github.com/Spirit0224/wcm2024 內容管理: https://spirit0224.github.io/wcm2024/content/index.html 課程投影片: https://chiamingyen.github.io/cmsimfly/reveal 課程網誌: https://spirit0224.github.io/wcm2024/blog","tags":"misc","url":"./pages/about/"},{"title":"WCM2024 W2 課程","text":"確認各學員是否完成 Github 中個人倉儲與網站的建立, 並且除了 Replit 還導入利用 Github Codespaces 維護個人與分組網站. 確認所有學員都已經建立個人網站 建立個人課程網站步驟: 1.登入 Github 2.連結到 https://github.com/mdecycu/cmsimde_site 3.利用 \"Use this template\" 下方的 \"Create a new repository\" 建立名稱為 wcm2024 的倉儲 4.在 wcm2024 倉儲上方的 Settings 設定頁面中, 左方 Pages 中的 Branch 分支區域, 選擇將 main 分支存為網頁的 root 根目錄 5.等 wcm2024 的倉儲 Github Pages 轉檔完成後, 可以看到 commits 提交區的綠色勾勾, 就完成網址為 https://帳號.github.io/wcm2024 的個人課程網站 利用上述步驟完成的倉儲內容, 同時帶有以 Python 編寫的動態網站程式, 以及位於 content 目錄中的靜態網頁資料. 確認學員已經會利用 Replit 維護網站 建議學員以 email 作為登入 Replit 的帳號, 不要依附在 Github 或 Gmail 帳號下, 以保有使用的獨立性. 由於 wcm2024 課程學員使用 Replit 免費帳號, 因此雲端 IDE 僅允許使用 Port 80 與 443 啟動網頁, 因此若要在 Replit 檢視動態網站或網誌推送到 Github 之前的內容, 必須要在動態與靜態模式中擇一使用. 如何利用 Codespaces 維護網站 Codespaces 屬於目前 Github 免費帳號下的功能之一, 與 Github 倉儲內容維護的整合度最高, 但是每個月的免費額度僅有 120 core hours, 若使用標準的 2 core 進行運算, 擇每天平均僅能使用兩個小時. 若提升至 4 core, 則每天可以使用 1 小時. 採用 Github Codespaces 維護網站的好處是, Visual Studio code 介面提供多終端機與多 ports 開啟功能, 在 Codespaces 中維護 wcm2024 的過程幾乎如同在 localhost Windows 10 或 11 的操作系統環境中進行","tags":"W2","url":"./2024-WCM-W2-blog-tutorial.html"},{"title":"WCM2024 W1 課程","text":"2024 WCM 如何建立課程倉儲 建立Github帳號 在Google搜尋Github並Sign up可用來建立並維護個人的課程倉儲與網站 建立個人課程網站 請至 cmsimde_site 倉儲,以此倉儲作為Template 建立個人的wcm2024倉儲,並設定個人的Github Pages課程網頁","tags":"W1","url":"./2024-WCM-W1-blog-tutorial.html"},{"title":"2020 Fall CP 課程","text":"2020 Fall 計算機程式的教學主要介紹 Python 與 Flutter 在機械設計流程中的應用. Python Python 可以用來開發單機版的視窗程式套件 Pyslvs-UI Python 可以用來開發網際版的內容管理系統 CMSiMDE Python 可以用來控制 CoppeliaSim 與 Webots 虛擬環境中的機電系統 Python 可以用於機器學習 Keras, Pytorch Flutter Flutter 可以用來開發跨 Apple 與 Android 手機與平板上的 Apps","tags":"Misc","url":"./2020-Fall-Intro-to-computer-programming.html"}]};